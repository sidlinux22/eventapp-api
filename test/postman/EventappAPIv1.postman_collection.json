{
	"info": {
		"_postman_id": "cef7b475-7bf4-4676-9c4a-ee0adb6dfb81",
		"name": "Eventapp API  v1",
		"description": "The Eventapp API:\n* Is REST-based (though we use POST instead of PUT).\n* Always returns responses in JSON.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/v1/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eded493-6c6e-4512-b097-879390515970",
						"exec": [
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"username\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"username\",",
							"    \"email\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(schema, pm.response.json()), JSON.stringify(tv4.errors)).to.be.true;",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"register"
					]
				},
				"description": "Users Register\n\nAPI endpoint to register new user \n\n* **URL**\n\n  /v1/register\n\n* **Method:**\n  `POST` \n  \n*  **URL Params**\n\n   **Required:**\n \n   `username=[string]`\n   `email=[string]`\n\n\n* **Data Params**\n ```json\n  {\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}\n```\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** `{\n    \"message\": \"User created successfully\"}`\n \n* **Error Response:**\n\n   * Code: 422 UNPROCESSABLE ENTRY\n    Content: `{\n    \"message\": \"Invalid email 'xxxxgmail.com'\"\n}`\n     OR\n   * Code: 409 CONFLICT \n    Content: `{\"message\": \"User with email 'xxxxx@gmail.com' already  exists  \"}`\n\n* **Sample Call:**\n\n ```json\n {\n    \"username\": \"sid\",\n    \"email\": \"sid@gmail.com\"\n}\n```"
			},
			"response": [
				{
					"name": "/v1/register",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/register",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"register"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "47"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:39:27 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User created successfully\"\n}"
				}
			]
		},
		{
			"name": "[TEST] /v1/register (Duplicate email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eded493-6c6e-4512-b097-879390515970",
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "  {\n       \"username\" : \"sid\",\n       \"email\" : \"sid22@gmail.com\"\n   }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"register"
					]
				},
				"description": "Test for duplicate emai registration"
			},
			"response": [
				{
					"name": "[TEST] /v1/register (Duplicate email)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n       \"username\" : \"sid\",\n       \"email\" : \"sid22@gmail.com\"\n   }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/register",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"register"
							]
						}
					},
					"status": "CONFLICT",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "73"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:38:46 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User with email 'sid22@gmail.com' already  exists  \"\n}"
				}
			]
		},
		{
			"name": "[TEST] /v1/register (Invalid email) ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eded493-6c6e-4512-b097-879390515970",
						"exec": [
							"pm.test(\"Status code is 422\", function () {",
							"    pm.response.to.have.status(422);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "  {\n       \"username\" : \"sid\",\n       \"email\" : \"sid22gmail.com\"\n   }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"register"
					]
				},
				"description": "Negative test for invalid email"
			},
			"response": [
				{
					"name": "[TEST] /v1/register (Invalid email) ",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n       \"username\" : \"sid\",\n       \"email\" : \"sid22gmail.com\"\n   }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/register",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"register"
							]
						}
					},
					"status": "UNPROCESSABLE ENTITY",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "52"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:38:20 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Invalid email 'sid22gmail.com'\"\n}"
				}
			]
		},
		{
			"name": "/v1/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d2b33ad3-3d1a-4514-99c8-ec9e24f00352",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/users",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"users"
					]
				},
				"description": "Users List\n\nAPI endpoint is to get all register users list\n\n* **URL**\n\n  /v1/users\n\n* **Method:**\n  `GET` \n  \n\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** \n```json \n{\n    \"users\": [\n        {\n            \"username\": \"sid\",\n            \"email\": \"sid22@gmail.com\"\n        }\n    ]\n}\n```"
			},
			"response": [
				{
					"name": "/v1/users",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/v1/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"v1",
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "115"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:37:30 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"users\": [\n        {\n            \"username\": \"sid\",\n            \"email\": \"sid22@gmail.com\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "/v1/event",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20a8b135-14de-4553-bcdf-bf97303a6aac",
						"exec": [
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"event_id\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"eventname\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"startdate\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"enddate\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"location\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"subscribe_users\": {",
							"      \"type\": \"array\",",
							"      \"items\": {}",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"event_id\",",
							"    \"eventname\",",
							"    \"startdate\",",
							"    \"enddate\",",
							"    \"location\",",
							"    \"subscribe_users\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(schema, pm.response.json()), JSON.stringify(tv4.errors)).to.be.true;",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/event",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"event"
					]
				},
				"description": "Create Event\n\nAPI endpoint to create a new event\n\n* **URL**\n\n  /v1/event\n\n* **Method:**\n  `POST` \n  \n*  **URL Params**\n\n   **Required:**\n \n   `eventname=[string]`\n   `startdate=[string]`\n   `enddate=[string]`\n   `location=[string]`\n\n\n* **Data Params**\n ```json\n{\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\"\n}\n```\n* **Success Response:**\n\n  * **Code:** 201\n ```json\n{\n    \"event_id\": 1,\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\",\n    \"subscribe_users\": []\n}\n```"
			},
			"response": [
				{
					"name": "/v1/event",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/v1/event",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"v1",
								"event"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "168"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:40:16 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"event_id\": 1,\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\",\n    \"subscribe_users\": []\n}"
				}
			]
		},
		{
			"name": "/v1/event/<int:event_id>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9b4abcb-8f3a-4092-9be9-df747e8e6b82",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/event/1",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"event",
						"1"
					]
				},
				"description": "List Event\n\nAPI endpoint to get a event detail by event_id\n\n* **URL**\n\n  /v1/event/<int:event_id>\n\n* **Method:**\n  `GET` \n  \n\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** \n```json \n{\n    \"event_id\": 1,\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\",\n    \"subscribe_users\": []\n}\n```"
			},
			"response": [
				{
					"name": "/v1/event/1",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}/v1/event/1",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"event",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "168"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:42:09 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"event_id\": 1,\n    \"eventname\": \"DevOpsDay2021\",\n    \"startdate\": \"2021-09-23\",\n    \"enddate\": \"2021-09-23\",\n    \"location\": \"Tokyo\",\n    \"subscribe_users\": []\n}"
				}
			]
		},
		{
			"name": "[TEST] /v1/event/1 (event_id not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5761c093-0e86-451f-b14e-b27fc14ad62c",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/event/0",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"event",
						"0"
					]
				},
				"description": "Negative test for event_id not found"
			},
			"response": [
				{
					"name": "[TEST] /v1/event/1 Copy (event_id not found)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}/v1/event/10",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"event",
								"10"
							]
						}
					},
					"status": "NOT FOUND",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "40"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:55:36 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"event_id not found\"\n}"
				}
			]
		},
		{
			"name": "/v1/subscribe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "016fd0ab-c836-416d-9133-98afb581068d",
						"exec": [
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"event_id\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"event_id\",",
							"    \"email\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(schema, pm.response.json()), JSON.stringify(tv4.errors)).to.be.true;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/subscribe",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subscribe"
					]
				},
				"description": "Subscribe Event\n\nAPI endpoint to subscribe any event with event_id and email\n\n* **URL**\n\n  /v1/subscribe\n\n* **Method:**\n  `POST` \n  \n*  **URL Params**\n\n   **Required:**\n \n   `event_id=[int]`\n   `email=[string]`\n   \n* **Data Params**\n ```json\n{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}\n```\n* **Success Response:**\n\n  * **Code:** 201\n ```json\n{\n    \"id\": 1,\n    \"event_id\": 1,\n    \"email\": \"sid22@gmail.com\"\n}\n```"
			},
			"response": [
				{
					"name": "/v1/subscribe",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/v1/subscribe",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"v1",
								"subscribe"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "67"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:09:43 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"event_id\": 1,\n    \"email\": \"sid22@gmail.com\"\n}"
				}
			]
		},
		{
			"name": "[Test] /v1/subscribe (Non-registered )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "016fd0ab-c836-416d-9133-98afb581068d",
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"xxxx@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/subscribe",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subscribe"
					]
				},
				"description": "Negative test for Non-registered  email"
			},
			"response": [
				{
					"name": "[Test] /v1/subscribe (Invalid email)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"xxxx@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/subscribe",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"subscribe"
							]
						}
					},
					"status": "CONFLICT",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "52"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:23:03 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Invalid email 'xxxx@gmail.com'\"\n}"
				}
			]
		},
		{
			"name": "[Test] /v1/subscribe (Invalid event ID)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "016fd0ab-c836-416d-9133-98afb581068d",
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"event_id\": \"0\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/subscribe",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subscribe"
					]
				},
				"description": "Test for invalid event_id"
			},
			"response": [
				{
					"name": "[Test] /v1/subscribe (Invalid event ID)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"0\",\n    \"email\": \"sid22@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/subscribe",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"subscribe"
							]
						}
					},
					"status": "CONFLICT",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "42"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:24:19 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Invalid event_id '0'\"\n}"
				},
				{
					"name": "[Test] /v1/subscribe (Invalid email)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"xxxx@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/subscribe",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"subscribe"
							]
						}
					},
					"status": "CONFLICT",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "52"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:23:03 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Invalid email 'xxxx@gmail.com'\"\n}"
				}
			]
		},
		{
			"name": "[Test] /v1/subscribe (Duplicate subscriptions)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a507eb24-e68b-4e48-b0d1-1950bb5248ed",
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/subscribe",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subscribe"
					]
				},
				"description": "Test for duplicate subscriptions"
			},
			"response": [
				{
					"name": "[Test] /v1/subscribe (Duplicate subscriptions)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/v1/subscribe",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"v1",
								"subscribe"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "67"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:09:43 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"event_id\": 1,\n    \"email\": \"sid22@gmail.com\"\n}"
				}
			]
		},
		{
			"name": "/v1/events",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b429b5c-fd1d-4909-a7af-5ccf69391b2e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/events",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"events"
					]
				},
				"description": "Event List\n\nAPI endpoint to get list of all events\n \n\n* **URL**\n\n  /v1/events\n\n* **Method:**\n  `GET` \n  \n\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** \n```json \n{\n    \"events\": [\n        {\n            \"event_id\": 1,\n            \"eventname\": \"DevOpsDay2021\",\n            \"startdate\": \"2021-09-23\",\n            \"enddate\": \"2021-09-23\",\n            \"location\": \"Tokyo\",\n            \"subscribe_users\": [\n                {\n                    \"id\": 1,\n                    \"event_id\": 1,\n                    \"email\": \"sid22@gmail.com\"\n                }\n            ]\n        },\n        {\n            \"event_id\": 2,\n            \"eventname\": \"DevOpsDay2022\",\n            \"startdate\": \"2022-10-23\",\n            \"enddate\": \"2022-10-23\",\n            \"location\": \"London\",\n            \"subscribe_users\": [\n                {\n                    \"id\": 2,\n                    \"event_id\": 2,\n                    \"email\": \"sid22@gmail.com\"\n                },\n                {\n                    \"id\": 3,\n                    \"event_id\": 2,\n                    \"email\": \"testuser@gmail.com\"\n                }\n            ]\n        }\n    ]\n}\n```"
			},
			"response": [
				{
					"name": "/v1/events",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}/v1/events",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"events"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "963"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:18:40 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"events\": [\n        {\n            \"event_id\": 1,\n            \"eventname\": \"DevOpsDay2021\",\n            \"startdate\": \"2021-09-23\",\n            \"enddate\": \"2021-09-23\",\n            \"location\": \"Tokyo\",\n            \"subscribe_users\": [\n                {\n                    \"id\": 1,\n                    \"event_id\": 1,\n                    \"email\": \"sid22@gmail.com\"\n                }\n            ]\n        },\n        {\n            \"event_id\": 2,\n            \"eventname\": \"DevOpsDay2022\",\n            \"startdate\": \"2022-10-23\",\n            \"enddate\": \"2022-10-23\",\n            \"location\": \"London\",\n            \"subscribe_users\": [\n                {\n                    \"id\": 2,\n                    \"event_id\": 2,\n                    \"email\": \"sid22@gmail.com\"\n                },\n                {\n                    \"id\": 3,\n                    \"event_id\": 2,\n                    \"email\": \"testuser@gmail.com\"\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "/v1/subscribe/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0e41408b-c6ac-4381-aef9-d9a8f8222e74",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/subscribe/users",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subscribe",
						"users"
					]
				},
				"description": "Event Subscribe Users List\n\nAPI endpoint to get list of all users who have subscribe events\n \n\n* **URL**\n\n  /v1/subscribe/users\n\n* **Method:**\n  `GET` \n  \n\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** \n```json \n{\n    \"user_events\": [\n        {\n            \"id\": 1,\n            \"event_id\": 1,\n            \"email\": \"sid22@gmail.com\"\n        },\n        {\n            \"id\": 2,\n            \"event_id\": 2,\n            \"email\": \"sid22@gmail.com\"\n        },\n        {\n            \"id\": 3,\n            \"event_id\": 2,\n            \"email\": \"testuser@gmail.com\"\n        }\n    ]\n}\n```"
			},
			"response": [
				{
					"name": "/v1/subscribe/users",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/v1/subscribe/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"v1",
								"subscribe",
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "357"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:19:08 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"user_events\": [\n        {\n            \"id\": 1,\n            \"event_id\": 1,\n            \"email\": \"sid22@gmail.com\"\n        },\n        {\n            \"id\": 2,\n            \"event_id\": 2,\n            \"email\": \"sid22@gmail.com\"\n        },\n        {\n            \"id\": 3,\n            \"event_id\": 2,\n            \"email\": \"testuser@gmail.com\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "/v1/subscribe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1d66a5a9-912e-4e46-993f-af60a54d6bd2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/subscribe",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subscribe"
					]
				},
				"description": "Event Unsubscribe\n\nAPI endpoint to unsubscribe event with event_id and email\n\n* **URL**\n\n  /v1/subscribe\n\n* **Method:**\n  `DELETE` \n  \n*  **URL Params**\n\n   **Required:**\n \n   `event_id=[int]`\n   `email=[string]`\n\n\n* **Data Params**\n ```json\n{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}\n```\n* **Success Response:**\n\n  * **Code:** 200\n ```json\n{\n    \"message\": \"User email 'sid22@gmail.com' unsubscribe event_id '1'\"\n}\n```"
			},
			"response": [
				{
					"name": "/v1/subscribe",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"1\",\n    \"email\": \"sid22@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/v1/subscribe",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"v1",
								"subscribe"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "75"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 13:19:51 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User email 'sid22@gmail.com' unsubscribe event_id '1'\"\n}"
				}
			]
		},
		{
			"name": "/v1/event/<int:event_id>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fd5d455-baac-4d9a-8012-aa0f4acd3ed8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/event/1",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"event",
						"1"
					]
				},
				"description": "Event Delete\n\nAPI endpoint use to delete a event by event_id.\n\n* **URL**\n\n  /v1/event/<int:event_id>\n\n* **Method:**\n  `DELETE` \n  \n\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** \n```json \n{\n    \"message\": \"Event deleted\"\n}\n```"
			},
			"response": [
				{
					"name": "/v1/event/1",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{url}}/v1/event/1",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"event",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "35"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 12:56:28 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Event deleted\"\n}"
				}
			]
		},
		{
			"name": "/v1/register [Delete user registeration]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eded493-6c6e-4512-b097-879390515970",
						"exec": [
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"username\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"username\",",
							"    \"email\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(schema, pm.response.json()), JSON.stringify(tv4.errors)).to.be.true;",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"register"
					]
				},
				"description": "User Delete\n\nAPI endpoint use to delete a event by event_id.\n\n* **URL**\n\n  /v1/event/<int:event_id>\n\n* **Method:**\n  `DELETE` \n\n*  **URL Params**\n\n   **Required:**\n \n   `username=[string]`\n   `email=[string]`\n   \n* **Data Params**\n ```json\n{\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}\n```\n\n\n* **Success Response:**\n\n  * **Code:** 200 \n    **Content:** \n```json \n{\n    \"message\": \"User deleted successfully\"\n}\n```"
			},
			"response": [
				{
					"name": "/v1/register [Delete user registeration]",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/register",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"register"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "47"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.16.0 Python/3.7.1"
						},
						{
							"key": "Date",
							"value": "Wed, 25 Dec 2019 14:30:19 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User deleted successfully\"\n}"
				}
			]
		},
		{
			"name": "[Test] /v1/register (Delete invalid email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eded493-6c6e-4512-b097-879390515970",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"sid\",\n    \"email\": \"sid22@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/v1/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"register"
					]
				},
				"description": "Test for delete invalid email"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b75986c1-06c8-4c30-bd1b-c9315bca2852",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6921b672-597a-4dd5-bdea-dcd3c006a75d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0f4fde0e-3de1-4222-9230-b4e762f0c57b",
			"key": "url",
			"value": "127.0.0.1:5000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}